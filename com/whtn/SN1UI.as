package com.whtn {	import flash.events.Event;	import flash.display.MovieClip;	import flash.events.MouseEvent;	import flash.text.TextFormat;	import flash.text.TextField;	import fl.controls.Button;	import fl.controls.Slider;	import fl.controls.SliderDirection;	import fl.events.SliderEvent;	import fl.controls.NumericStepper;	import fl.controls.CheckBox;	import com.whtn.Tube;	import com.whtn.Sequencer;	public class SN1UI extends MovieClip {		public var myFormat:TextFormat = new TextFormat();		private var gridRef = new Array();		private var rowRef:MovieClip;// = new MovieClip();		public var globalBrightness:Number = 100;		public var sequencer:Sequencer = new Sequencer();

		public var ballButton:Button = new Button();		public var strobeButton:Button = new Button();		public var blackoutButton:Button = new Button();
		public var loopControl:CheckBox = new CheckBox();
		public var reverseControl:CheckBox = new CheckBox();
		public var reflectControl:CheckBox = new CheckBox();		public var trailControl:NumericStepper = new NumericStepper();		public function SN1UI ():void {
			
			myFormat.font = "_sans";			myFormat.size = 10;			myFormat.color = 0xFFFFFF;					super();			var row = 0;			var w = 30;			var h = 30;			var angle = (row * 30);			//Add the star lights			for(i=0;i<60;i++) {				if(i%5==0) {					angle = (row*30);					rowRef = new MovieClip();					rowRef.rotation = angle;					rowRef.x = 200;					rowRef.y = 200 + (6 * w);					addChild(rowRef);					row++;				}				var btn = new PalButton(i,w,h);					btn.x = (w+((i%5)*(w+2)));					btn.y = 0;					btn.lbl.visible = false;					//btn.rotation = -angle;								btn.spot.addEventListener(MouseEvent.MOUSE_DOWN, LEDOverHandler);					btn.spot.addEventListener(MouseEvent.MOUSE_OVER, LEDOverHandler);					btn.spot.addEventListener(MouseEvent.MOUSE_UP, LEDOutHandler);					btn.spot.addEventListener(MouseEvent.MOUSE_OUT, LEDOutHandler);				rowRef.addChild(btn);				gridRef.push(btn);			}			//Add the UV lights			angle = 0;			for(i=60;i<64;i++) {				btn = new PalButton(i,w,h,0x6600FF);				var w10 = w * 10;				btn.x = ((i%2) * (w * 11)) - (w * 6) + 200;				btn.y = (Math.round((i%4)/4)*330) + 200;				btn.alpha = 0;				btn.name = "uv" + (i%4);				addChild(btn);				gridRef.push(btn);			}			var uvSlider:Slider = new Slider();				uvSlider.move(100,600);				uvSlider.setSize(120,20);				uvSlider.liveDragging = true;				uvSlider.value = 0;				uvSlider.minimum = 0;				uvSlider.maximum = 100;				uvSlider.snapInterval = 1;				uvSlider.tickInterval = 10;				uvSlider.value = 0;				uvSlider.direction = SliderDirection.HORIZONTAL;				uvSlider.addEventListener(SliderEvent.CHANGE, uvHandler);			addChild(uvSlider);			var wishButton:Button = new Button();				wishButton.setSize(80,40);				wishButton.move(330,120);				wishButton.label = "Make a wish";				wishButton.addEventListener(MouseEvent.MOUSE_DOWN,wishHandler);			addChild(wishButton);


			loopControl.addEventListener(MouseEvent.CLICK, parameterHandler);			loopControl.label = "Loop (l)";			loopControl.setStyle("textFormat", myFormat);
			loopControl.move(0,85);			addChild(loopControl)
			
			reflectControl.addEventListener(MouseEvent.CLICK, parameterHandler);			reflectControl.setStyle("textFormat", myFormat);			reflectControl.label = "Reflect (k)";
			reflectControl.move(75,85);			addChild(reflectControl);
			
			reverseControl.addEventListener(MouseEvent.CLICK, parameterHandler);			reverseControl.setStyle("textFormat", myFormat);			reverseControl.label = "Reverse (j)";
			reverseControl.move(150,85);			addChild(reverseControl);
			
			trailControl.addEventListener(Event.CHANGE,parameterHandler);			trailControl.value = 2;
			trailControl.move(250,85);
			trailControl.setSize(50,20);			addChild(trailControl);

			blackoutButton.setSize(80,40);			blackoutButton.move(0,120);			blackoutButton.label = "blackout";			blackoutButton.addEventListener(MouseEvent.MOUSE_DOWN,blackHandler);			addChild(blackoutButton);		
			ballButton.setSize(80,40);			ballButton.move(110,120);			ballButton.label = "discoball";			ballButton.addEventListener(MouseEvent.MOUSE_DOWN,ballHandler);			addChild(ballButton);						strobeButton.setSize(80,40);			strobeButton.move(220,120);			strobeButton.label = "Strobe";			strobeButton.addEventListener(MouseEvent.MOUSE_DOWN,strobeHandler);			addChild(strobeButton);		}
		function blackHandler(e:Event):void {			//engine.blackout();			//phidget.blackout();
			dispatchEvent(new LightEvent(LightEvent.BLACKOUT));		}		function strobeHandler(e:MouseEvent):void {			//engine.go(fxFactory.make("strobe"));		}		function ballHandler(e:MouseEvent):void {			//engine.go(fxFactory.make("discoball"));		}
		function parameterHandler(e:Event):void {//			engine.loop = loopControl.selected;//			engine.reflect = reflectControl.selected;//			engine.reverse = reverseControl.selected;//			engine.trail = trailControl.value;		}

		private function uvHandler(e:SliderEvent):int {			//var uv:Array = new Array(new Array());			for(i=60;i<64;i++) {				dispatchEvent(new LightEvent(i,e.value,null));//				getChildByName("uv" + (i%4)).alpha = (e.value / 100);				gridRef[i].alpha = e.value/100;			}		}		private function wishHandler(e:MouseEvent):void {			var starIndex = 0;			var starArray = new Array(6,10,7,0,8,5,9,2,4,3,11,1);			var fx = new Effect("shooter");				fx.sequence = new Array();			var star = starArray[starIndex]*5;			trace(star);			for(i=(star+4),end=star;i>=end;i--) {				fx.sequence.push(new Array(i+""));			}			star = (star>=30) ? star-30 : star+30;			for(i=star,end=star+5;i<end;i++) {				fx.sequence.push(new Array(i+""));			}			//engine.go(fx);			dispatchEvent(new LightEvent(-1,100,fx.sequence));			starIndex++;			if(starIndex>=12) starIndex = 0;		}		private function LEDOverHandler(event:MouseEvent):void {			var idx = event.currentTarget.parent.index;			if(event.buttonDown==true) {				dispatchEvent(new DebugEvent("star: "+idx));				dispatchEvent(new LightEvent(idx,100));				gridRef[idx].lite.alpha = 1;			}		}		private function LEDOutHandler(event:MouseEvent):void {			var idx = event.currentTarget.parent.index;			//light(idx,0);			dispatchEvent(new LightEvent(idx,0));				gridRef[idx].lite.alpha = 0;		}				public function update(e:LightEvent):void {			if(e.display!=null){				for(i in e.display) {					_brightness = (i<60) ? (e.display[i]/100 * globalBrightness) : e.display[i];					if(gridRef[i])						gridRef[i].lite.alpha = _brightness/100;				}			} else {				_brightness = (e.index<60) ? (e.brightness / 100 * globalBrightness) : e.brightness;				gridRef[e.index].lite.alpha = _brightness / 100;			}		}	}}