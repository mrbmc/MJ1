package com.whtn {	import flash.utils.ByteArray;	import flash.events.EventDispatcher;	import flash.events.Event;	import flash.events.MouseEvent;	import flash.display.Sprite;	import com.whtn.EffectEvent;	import com.whtn.Effect;	import com.whtn.effects.*;	public dynamic class EffectFactory extends Sprite {		private var a = new Array();		private var b = new Array();		public var effectName:String = null;		public var library:Array = new Array();		public var hotKeysMap:Array = new Array();		public function make(_effectName:String=null) {			if(this.library[_effectName]!=null){				return this.library[_effectName];			}			return false;		}		private function picker(min=0,max=0):int {			return (Math.round(Math.random()*(max-min))+min);		}		private function confine(val,min,max) {			if(val>max)				val -= max;			else if(val<min)				val += max;			return val;		}		public function cloneObject(o:Object):Object{			var bytes:ByteArray = new ByteArray();				bytes.writeObject(o);				bytes.position = 0;			return bytes.readObject();		}		/*public function effectRelay(e:EffectEvent) {			var ev = new EffectEvent(e.action,e.effect,e.effectName);			dispatchEvent(ev);		}*/		public function EffectFactory() {			library.strobe = new Strobe();			library.pulse = new Pulse();			library.spiral = new Spiral();			library.spiralx2 = new SpiralX2();			library.bouncer = new Bouncer();			library.warp = new Warp();			library.propeller = new Propeller();			library.rings = new Rings();			library.clock = new Clock();			library.twinkle = new Twinkle();			library.disco = new Disco();			library.discoball = new Discoball();			library.mj1_wash = new MJ1Wash();			library.mj1_chaser = new MJ1Chaser();			library.mj1_curtain = new MJ1Curtain();			library.mj1_curtainwash = new MJ1CurtainWash();			for(var effectName in library) {				var effect:Effect = library[effectName];				hotKeysMap[effect.hotKey] = effect;			}					}	}}