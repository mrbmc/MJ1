package com.whtn {	import flash.display.Sprite;	import flash.display.Stage;	import flash.events.MouseEvent;	import flash.events.Event;	import flash.text.TextFormat;	import flash.text.TextField;	import com.whtn.TubeEvent;	import com.whtn.PalButton;	public class Tube extends Sprite {		public var steps:Number = 8;		//components		public var index:String;		public var bg:Sprite = new Sprite();		public var lite:Sprite = new Sprite();		public var spot:Sprite = new Sprite();		public var lit:Boolean = false;		public var lbl:TextField;		public var trigger:PalButton;				private var increments:Number = 9;		private var maxRotation:Number = MJ1UI.MAX_ROTATION;		public var w:Number = 0;		public var h:Number = 0;		private var t:Number = Math.max(w / increments,10);//handle width		//properties		public var settings:TubeSet = new TubeSet(this.index,50,90,0xFF0000);		public var brightness:Number = 0;		public var color:Number = 0xFF0000;		private var _position:Number = 90;		public function set position(n:Number) {			this._position = Math.round((n/maxRotation)*increments) * (maxRotation/increments);		}		public function get position():Number {			return this._position;		}		var myFont:FontDIN = new FontDIN();		var myTextFormat:TextFormat = new TextFormat();		public function Tube (i:Object,_w:Number,_h:Number,r:Number=0,c:Number=0x000000) {			super();			this.index = i;			this.name = "tube" + i;			this.position = r;			this.color = c;			this.w = _w;			this.h = _h;			addChild(this.bg);			Drawing.drawBox(this.bg,w,h,0x000000,1,0,0);			bg.x=bg.y=0;			this.bg.name = "background";			addChild(lite);			Drawing.drawBox(this.lite,this.t,this.h,c,1,0,0);			lite.name = "lite";			//lite.alpha = this.brightness / 100;			lite.x = (this.position/this.maxRotation) * (w - this.t);			lbl = new TextField();			lbl.name = "label";			lbl.text = i;			lbl.x = w+1;			lbl.y = 0+1;			lbl.textColor = 0x999999;			lbl.selectable = false;			this.addChild(lbl);			myTextFormat.font = myFont.fontName;			myTextFormat.size = 10;			lbl.setTextFormat(myTextFormat);			lbl.embedFonts = true;			lbl.selectable = false;			addChild(spot);			Drawing.drawBox(this.spot,w,h,0xFF0FF,0,0,0);			spot.buttonMode = true;			spot.useHandCursor = true;			spot.name = "target";			spot.addEventListener(MouseEvent.MOUSE_DOWN, moveHandler);			spot.addEventListener(MouseEvent.MOUSE_MOVE, moveHandler);									trigger = new PalButton(i,h,h,0x000000,true);			trigger.x = (w)+21;			trigger.name = "trigger";			trigger.spot.addEventListener(MouseEvent.MOUSE_DOWN,triggerClick);			trigger.spot.addEventListener(MouseEvent.MOUSE_UP,triggerClick);			trigger.spot.addEventListener(MouseEvent.MOUSE_MOVE,triggerClick);			trigger.spot.addEventListener(MouseEvent.MOUSE_OUT,triggerClick);			addChild(trigger);		}		private function triggerClick(e:MouseEvent):void {			var bLit = (e.currentTarget.parent.lit) ? true : (e.buttonDown && (e.type!=MouseEvent.MOUSE_OUT));			if(e.type==MouseEvent.MOUSE_UP) {				e.currentTarget.parent.lit = !e.currentTarget.parent.lit;				bLit = e.currentTarget.parent.lit * 1;			}			var bright = (bLit) ? 100 : 0;			var ts = new TubeSet(this.index,bright);			dispatchEvent(new TubeEvent(this.index,ts));//			update(ts);		}		private function moveHandler(e:MouseEvent) {			if(e.buttonDown) {				p = e.currentTarget.parent;				a = (e.localX / p.w) * this.maxRotation;				p.position = a;//				p.lbl.text = this.position;//				p.lite.x = (p.position/this.maxRotation) * (p.w - p.t);				var ts = new TubeSet(this.index,-1,this.position);				update(ts);				dispatchEvent(new TubeEvent(this.index,ts));			}		}		private function LEDOverHandler(event:MouseEvent):void {			var idx = event.currentTarget.parent.index;			if(event.buttonDown==true) {				var ts = new TubeSet(idx,100);				dispatchEvent(new TubeEvent(idx,ts));			}		}		private function LEDOutHandler(event:MouseEvent):void {			var idx = event.currentTarget.parent.index;			var ts = new TubeSet(idx,0);			dispatchEvent(new TubeEvent(this.index,ts));		}		public function update(s:TubeSet) {			//if(s.index != this.index) return;			//trace("tube" + this.index + ".update" + s.brightness);			if(s.color>0) this.color = s.color;			if(s.position>=0) this.position = s.position;			if(s.brightness >= 0) this.brightness = s.brightness;//			trace("update.tube." + s.index + ": " + s.brightness + "/" + s.position + "/" + s.color);						Drawing.setColor(this.lite, this.color);			this.lite.x = (this.position / this.maxRotation) * (this.w - this.t);			this.trigger.lite.alpha = this.brightness;		}	}}