package com.wcp {	import flash.display.MovieClip;	import flash.events.MouseEvent;	import flash.text.TextFormat;	import flash.text.TextField;	import fl.controls.Slider;	import fl.controls.SliderDirection;	import fl.controls.NumericStepper;	import fl.controls.CheckBox;	import com.wcp.Tube;	public class SN1UI extends MovieClip {		public var tfText:TextFormat = new TextFormat();		private var gridRef = new Array();		private var rowRef:MovieClip;// = new MovieClip();		public function SN1UI ():void {			super();			var row = 0;			var w = 22;			var h = 22;			var angle = (row * 30);			//Add the star lights			for(i=0;i<60;i++) {				if(i%5==0) {					angle = (row*30);					rowRef = new MovieClip();					rowRef.rotation = angle;					rowRef.y = 6*w;					addChild(rowRef);					row++;				}				var btn = new PalButton(i,w,h);					btn.x = w+((i%5)*(w+2));					btn.y = 0;					btn.lbl.visible = false;					//btn.rotation = -angle;								btn.spot.addEventListener(MouseEvent.MOUSE_DOWN, LEDOverHandler);					btn.spot.addEventListener(MouseEvent.MOUSE_OVER, LEDOverHandler);					btn.spot.addEventListener(MouseEvent.MOUSE_UP, LEDOutHandler);					btn.spot.addEventListener(MouseEvent.MOUSE_OUT, LEDOutHandler);				rowRef.addChild(btn);				gridRef.push(btn);			}			//Add the UV lights			angle = 0;			for(i=60;i<64;i++) {				btn = new PalButton(i,w,h,0x6600FF);				btn.x = ((i%2)*220)-120;				btn.y = (Math.floor((i-60)/2)*200)+20;//((i%2)*200)-100;				btn.alpha = 0;				addChild(btn);				gridRef.push(btn);			}		}		private function LEDOverHandler(event:MouseEvent):void {			var idx = event.currentTarget.parent.index;			if(event.buttonDown==true) {				dispatchEvent(new DebugEvent("star: "+idx));				dispatchEvent(new LightEvent(idx,100));			}		}		private function LEDOutHandler(event:MouseEvent):void {			var idx = event.currentTarget.parent.index;			//light(idx,0);			dispatchEvent(new LightEvent(idx,0));		}				public function update(e:LightEvent):void {			if(e.display!=null){				for(i in e.display) {					_brightness = (i<60) ? (e.display[i]/100*globalBrightness) : e.display[i];					gridRef[i].lite.alpha = _brightness/100;				}			} else {				_brightness = (e.index<60) ? (e.brightness / 100 * globalBrightness) : e.brightness;				gridRef[e.index].lite.alpha = _brightness / 100;			}		}	}}